<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-09-20T20:00:31+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Leo’s site</title><entry><title type="html">版权申明</title><link href="http://localhost:4000/license/" rel="alternate" type="text/html" title="版权申明" /><published>2025-08-23T00:00:00+08:00</published><updated>2025-08-23T00:00:00+08:00</updated><id>http://localhost:4000/license</id><content type="html" xml:base="http://localhost:4000/license/"><![CDATA[<h2 id="版权申明">版权申明</h2>]]></content><author><name>Leo</name></author><summary type="html"><![CDATA[版权申明]]></summary></entry><entry><title type="html">gitee免费使用git lfs</title><link href="http://localhost:4000/gitee-free-lfs/" rel="alternate" type="text/html" title="gitee免费使用git lfs" /><published>2025-08-09T00:00:00+08:00</published><updated>2025-08-09T00:00:00+08:00</updated><id>http://localhost:4000/gitee-free-lfs</id><content type="html" xml:base="http://localhost:4000/gitee-free-lfs/"><![CDATA[<h1 id="免费使用gitee的git-lfs功能">免费使用<a href="https://gitee.com/">Gitee</a>的<a href="https://cn.bing.com/search?q=git%20LFS">Git LFS</a>功能</h1>

<p>众所周知，Gitee只允许<strong>给了钱（或试用期）的公司</strong>使用LFS功能，不然是没有这个功能的。</p>

<p>但是有一个方法，可以通过逻辑漏洞来使用，只是配置略麻烦。</p>

<h2 id="注册免费试用lfs功能git网站如githubgitcode的账号与新建仓库">注册免费试用LFS功能Git网站（如<a href="https://github.com">GitHub</a>、<a href="https://gitcode.com">GitCode</a>）的账号与新建仓库</h2>

<p>自行百度吧！</p>

<h2 id="gitee仓库设置">Gitee仓库设置</h2>

<p>导航到仓库设置（Gitee顶栏）$\rightarrow$ 仓库设置（第一个）$\rightarrow$ 功能设置（第二个）$\rightarrow$ 同步（最后一个）$\rightarrow$ 仓库远程地址(用于强制同步)，把你刚刚在另外网站新建的仓库地址复制进去。</p>

<p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/gitee-free-lfs_同步.png" alt="gitee-free-lfs_同步.png (1989×639)" /></p>

<p>Gitee就会把另外一个仓库里面的所有文件（包括LFS文件）复制进去，大功告成！</p>

<p>不过最近Gitee好像修复了这个BUG</p>]]></content><author><name></name></author><summary type="html"><![CDATA[免费使用Gitee的Git LFS功能]]></summary></entry><entry><title type="html">关于质数的猜想</title><link href="http://localhost:4000/prime-Leo-guess/" rel="alternate" type="text/html" title="关于质数的猜想" /><published>2025-08-03T00:00:00+08:00</published><updated>2025-08-03T00:00:00+08:00</updated><id>http://localhost:4000/prime-Leo-guess</id><content type="html" xml:base="http://localhost:4000/prime-Leo-guess/"><![CDATA[<p>$n$为自然数时，$\frac{10^{2^n+1}+17}{9}$是否为质数，已验证：$n\in[0,26]$</p>]]></content><author><name></name></author><summary type="html"><![CDATA[$n$为自然数时，$\frac{10^{2^n+1}+17}{9}$是否为质数，已验证：$n\in[0,26]$]]></summary></entry><entry><title type="html">介绍一下我是怎么搭建起自己的Github网站的</title><link href="http://localhost:4000/create-site/" rel="alternate" type="text/html" title="介绍一下我是怎么搭建起自己的Github网站的" /><published>2025-07-24T00:00:00+08:00</published><updated>2025-07-24T00:00:00+08:00</updated><id>http://localhost:4000/create-site</id><content type="html" xml:base="http://localhost:4000/create-site/"><![CDATA[<h1 id="第一步注册github">第一步，注册Github</h1>

<p>请自行百度</p>

<h1 id="第二步创建仓库">第二步，创建仓库</h1>

<p>感谢<a href="https://github.com/pianfan">pianfan</a>，我的网站就是fork它的，不过原内容几乎删完了<del>（你可以fork我的，但</del>不<del>建议哦）</del>。</p>

<p>你也可以自己部署</p>

<p><strong>注意</strong>：仓库名必须为<code class="language-plaintext highlighter-rouge">用户名.github.io</code>！</p>

<h1 id="第三步部署仓库">第三步，部署仓库</h1>

<p>如果是fork的，请把文章（代码）删除，以免造成侵权，被告发了很不舒服</p>

<h2 id="新建indexhtml">新建<code class="language-plaintext highlighter-rouge">index.html</code></h2>

<p>建议下载<a href="https://www.jetbrains.com/zh-cn/webstorm/">WebStorm：JetBrains 出品的 JavaScript 和 TypeScript IDE</a><del>（<a href="https://blog.idejihuo.com/topics/jetbrains">破解版</a>免费）</del>（<a href="https://gitcode.com/Leo-hele/download_files/tree/main/Webstorm">快速下载链接，含破解包</a>）</p>

<p><code class="language-plaintext highlighter-rouge">index.html</code>是显示在首页上的</p>

<p>你可以使用<code class="language-plaintext highlighter-rouge">JavaScript</code>等工具</p>

<p>等待几分钟你就可以在<code class="language-plaintext highlighter-rouge">用户名.github.io</code>看到你的网站了！</p>

<h2 id="工具picgo-image上传图片也可以每次都自己上传-只是麻烦而已嘛">工具：<a href="[项目目录预览 - download_files - GitCode](https://gitcode.com/Leo-hele/download_files/tree/main/PicGo)">PicGo-Image</a>（上传图片，也可以每次都自己上传 <del>，只是麻烦而已嘛</del>）</h2>

<p>注：提供的链接有一个Pic List，是升级版，快速下载其他版本：<a href="https://gh.llkk.cc/https://github.com/Kuingsmile/PicList/releases/">Releases · Kuingsmile/PicList · GitHub</a>（注意点击属于最新的一个版本位置的下面的（资产位置）链接，不是上面的，也可以下载其他版本），官网：<a href="https://piclist.cn/">PicList</a>，PicGo官网：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/#下载安装">PicGo</a>（注意到了吗？是github.io哦）</p>

<p>请先下载<a href="https://nodejs.cn/download/">Node.js</a>（最好百度搜索安装教程，因为要安装Python2.7等语言）</p>

<p>PicGo的位置在右下角（系统托盘）里</p>

<h3 id="部署picgo">部署<code class="language-plaintext highlighter-rouge">PicGo</code></h3>

<ol>
  <li>
    <h4 id="github图床">GitHub图床：</h4>

    <p>使用PicGo原版设置。</p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo1.png" alt="create-site_PicGo1.png (1180×670)" /></p>

    <p>注意！<code class="language-plaintext highlighter-rouge">PicGo</code>有时默认为master，但<code class="language-plaintext highlighter-rouge">GitHub</code>是main！</p>

    <p>仓库名填<code class="language-plaintext highlighter-rouge">https://github.com/用户名/用户名.github.io</code>（就是刚刚新建的仓库）或者其它你的仓库</p>

    <p>自定义域名就是用<code class="language-plaintext highlighter-rouge">raw.githubusercontent.com</code>替换仓库名<code class="language-plaintext highlighter-rouge">github.com</code></p>

    <h5 id="配置token">配置token</h5>

    <p>打开<a href="https://github.com/settings/tokens/new">New personal access token (classic)</a>。</p>

    <p>名称、描述随意。</p>

    <p>有效期随意，推荐选无有效期（永不过期）</p>

    <p>权限勾选<code class="language-plaintext highlighter-rouge">repo</code>，其它随意。</p>

    <p>创建后就是这样：</p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo3.png" alt="create-site_PicGo3.png (1647×3107)" /></p>

    <p>生成后就是这个页面：</p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo6.png" alt="create-site_PicGo6.png (1647×965)" /></p>

    <p>把它复制下来，粘贴到PicGo github token里。</p>
  </li>
  <li>
    <h4 id="gitee图床">Gitee图床：</h4>

    <p>先下载插件。</p>

    <p>进入命令行，输入：</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>AppData<span class="se">\R</span>oaming<span class="se">\p</span>icgo
npm <span class="nb">install </span>picgo-plugin-gitee-uploader
</code></pre></div>    </div>

    <h5 id="报错">报错</h5>

    <ol>
      <li>找不到<code class="language-plaintext highlighter-rouge">npm</code>：请下载node.js并保证添加到PATH</li>
      <li>不允许<code class="language-plaintext highlighter-rouge">npm</code>：<code class="language-plaintext highlighter-rouge">powershell</code>不允许用npm，换成<code class="language-plaintext highlighter-rouge">cmd</code>。</li>
    </ol>

    <p>重启<code class="language-plaintext highlighter-rouge">PicGo</code>，插件就安装好了。</p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo2.png" alt="create-site_PicGo2.png (1178×634)" /></p>

    <p>配置（先注册Gitee）</p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo4.png" alt="create-site_PicGo4.png (1174×649)" /></p>

    <p>owner填用户名，repo填仓库名</p>

    <p>path不用填，如果你不想要你的图片在根目录里，可以填</p>

    <p>message是上传时的消息，不填为默认</p>

    <h5 id="配置token-1">配置token</h5>

    <p>打开<a href="https://gitee.com/profile/personal_access_tokens/new">私人令牌 - Gitee.com</a></p>

    <p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/create-site_PicGo5.png" alt="create-site_PicGo5.png (1395×923)" /></p>
  </li>
</ol>

<p>与Github大同小异，但是<strong>注意权限</strong>！如果权限选择少了，就会在没有登录Gitee时上传失败！建议全选。</p>

<h2 id="工具jekyllgithub-page">工具：<a href="https://jekyllcn.com/">Jekyll</a>（Github Page）</h2>

<p>安装地址：<a href="https://jekyllcn.com/docs/installation/">安装 - Jekyll • 简单静态博客网站生成器</a></p>

<p>先安装<a href="https://www.ruby-lang.org/zh_cn/downloads/">Ruby</a>（注意看教程，请安装好Gem）和<code class="language-plaintext highlighter-rouge">bundle</code>。</p>

<h3 id="安装">安装</h3>

<h4 id="linux或macos">Linux或Macos</h4>

<h5 id="macos">Macos</h5>

<p>安装Xcode Command-Line Tools：Preferences → Downloads → Components</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>jekyll
</code></pre></div></div>

<h4 id="windows">Windows</h4>

<h4 id="安装-github-pages源地址">安装 github-pages<a href="https://jekyllcn.com/docs/windows/#安装-github-pages">（源地址）</a></h4>

<ul>
  <li>打开命令行界面安装 <a href="http://bundler.io/">Bundler</a>:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>bundler
</code></pre></div>    </div>
  </li>
  <li>
    <p>在你的博客根目录中创建名为 <code class="language-plaintext highlighter-rouge">Gemfile</code> 不带任何后缀名的文件</p>
  </li>
  <li>
    <p>拷贝复制下面两行到文件中：</p>

    <pre><code class="language-gemfile">source 'http://rubygems.org'
gem 'github-pages'
</code></pre>
  </li>
  <li>打开命令行界面，切换到你本地博客库的根目录，安装github-pages:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">install</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>如果你是用的Webstorm就更简单了，他会自动识别Gemfile安装（自动安装bundle），并且可以设置工具运行Jekyll。</p>

<h3 id="配置jekyllfork">配置Jekyll（fork）</h3>

<p>网上有很多教程，诸如<a href="https://jekyllcn.com/">Jekyll • 简单静态博客网站生成器 - 将纯文本转换为静态博客网站</a>；<a href="https://blog.csdn.net/FloraCHY/article/details/135191964">使用 Jekyll 构建你的网站 - 初入门-CSDN博客</a></p>

<p>但是有一个最简单的方法，就是<a href="https://pianfan.github.io/build_own_website/">零基础小白如何搭建自己的 github.io 个人网站 – Pianfan’s blog</a></p>

<p>方法是这样的：</p>

<h4 id="step1-找到一个你觉得完美的githubio">Step1. 找到一个你觉得完美的Github.io</h4>

<h4 id="step2-复刻下来">Step2. 复刻下来</h4>

<p>把<code class="language-plaintext highlighter-rouge">https://xxx.github.io</code>换成<code class="language-plaintext highlighter-rouge">https://github.com/xxx/xxx.github.io</code>然后点击<code class="language-plaintext highlighter-rouge">Fork</code>（复刻）</p>

<p>也可以直接换成<code class="language-plaintext highlighter-rouge">https://github.com/xxx/xxx.github.io/archive/refs/heads/branch.zip</code>（<code class="language-plaintext highlighter-rouge">branch</code>是分支名，Github上一般为<code class="language-plaintext highlighter-rouge">main</code>）下载过后推送到仓库</p>

<p>推荐使用镜像站加速（有些个人网站过大）<code class="language-plaintext highlighter-rouge">https://gh.llkk.cc/https://github.com/xxx/xxx.github.io/archive/refs/heads/branch.zip</code>（branch同上）</p>

<h4 id="step3-找到_posts文件夹有可能不是可以看_configyml配置文件也有可能是yaml结尾灵活变通">Step3. 找到_posts文件夹（有可能不是，可以看_config.yml配置文件，也有可能是.yaml结尾，灵活变通）</h4>

<h4 id="step4-删除所有东西先备份再删除">Step4. 删除所有东西（先备份再删除）</h4>

<p>以免侵权哦~</p>

<h4 id="step5-开始博客">Step5. 开始博客</h4>

<p>在里面写东西吧！注意名称和文件头（就是用两个—包起来的部分，在开头）格式要用之前的格式（所以要备份呢），特别是文件开头部分（yaml部分），不知道什么意思就别动，基本如下：</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-mm-dd</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">xxx（显示名称）</span>
<span class="na">permalink</span><span class="pi">:</span> <span class="s">/xxx1/xxx2/.../xxxn/（路径）</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">xxx（别改！就用原来的，这是显示效果，如果你知道怎么改可以改，原来有很多可以选一个喜欢的用，可以参见其它文章或者后面的部分）</span>
<span class="na">auther</span><span class="pi">:</span> <span class="s">xxx（姓名）</span>
<span class="na">email</span><span class="pi">:</span> <span class="s">xxx（邮箱）</span>
<span class="na">class</span><span class="pi">:</span> <span class="s">xxx（类别，也有可能以其它名称出现，参考原来的）</span>
<span class="nn">---</span>
</code></pre></div></div>

<h4 id="step6-删除备份">Step6. 删除备份</h4>

<h3 id="配置jekyll原创-">配置Jekyll（原创 ）</h3>

<h4 id="step1-新建layout">Step1. 新建<code class="language-plaintext highlighter-rouge">layout</code></h4>

<p>如果你没有<code class="language-plaintext highlighter-rouge">_layout</code>文件夹，新建一个。</p>

<p>在里面新建一个<code class="language-plaintext highlighter-rouge">html</code>文件，叫做诸如<code class="language-plaintext highlighter-rouge">default</code>之类的，供以后使用，类似这样：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE HTML&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"zh"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"referrer"</span> <span class="na">content=</span><span class="s">"no-referrer"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>{\{ page.title }} - {\{ site.title }}<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"../style.css"</span><span class="nt">&gt;</span> <span class="c">&lt;!-- 注意路径要到根目录需要"..\" --&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"icon"</span> <span class="na">href=</span><span class="s">"网站的图像"</span> <span class="na">type=</span><span class="s">"image/x-icon"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"../js/base.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
{\{ content }}
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>其中<code class="language-plaintext highlighter-rouge">content</code>就是内容部分（你猜为啥叫<code class="language-plaintext highlighter-rouge">layout</code>），是所有页面的内容</p>

<p>再新建一个<code class="language-plaintext highlighter-rouge">html</code>文件，叫做<code class="language-plaintext highlighter-rouge">page</code>之类的，用于文章，类似这样：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: default
---
<span class="c">&lt;!-- 想不到吧，layout可以用layout --&gt;</span>
{\{ content }}
<span class="c">&lt;!-- 可以有很多功能，比如代码高亮，公式高亮，复制代码，链接字体，评论，点赞，目录等，就像你看到的这篇文章一样 --&gt;</span>
</code></pre></div></div>

<h4 id="step2新建indexhtml">Step2.新建<code class="language-plaintext highlighter-rouge">index.html</code></h4>

<p>如果你不用Jekyll，Github也会默认你使用了Jekyll，所以整个文章新建博客第一步也是<code class="language-plaintext highlighter-rouge">index.html</code></p>

<p>但是安装Jekyll后可以本地查看，不需要推送和等待了。</p>

<h4 id="step3-新建其他">Step3. 新建其他</h4>

<p>写自己的博客，创建<code class="language-plaintext highlighter-rouge">blogs.html</code>等</p>

<h4 id="step4-启动jekyll">Step4. 启动Jekyll</h4>

<h5 id="windows-1">Windows</h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<h5 id="linux或macos-1">Linux或MacOs</h5>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll serve
</code></pre></div></div>

<p>具体详见<a href="https://jekyllcn.com/docs/usage/">基本用法 - Jekyll • 简单静态博客网站生成器</a></p>

<h4 id="step5-查看效果">Step5. 查看效果</h4>

<p>在浏览器中输入网址<code class="language-plaintext highlighter-rouge">localhost:4000</code>查看效果</p>

<h3 id="jekyll语言">Jekyll语言</h3>

<p>前面已经说了<code class="language-plaintext highlighter-rouge">layout</code>，下面再说一些（其实Jekyll用的是<code class="language-plaintext highlighter-rouge">liquid</code>）：</p>

<h4 id="生成后的文件">生成后的文件</h4>

<p>你可以在<code class="language-plaintext highlighter-rouge">_site</code>文件夹下查看生成后的文件，你会发现layout已经用上了。</p>

<h4 id="-xxx-执行操作"><code class="language-plaintext highlighter-rouge">{\% xxx %}</code>：执行操作</h4>

<h5 id="include"><code class="language-plaintext highlighter-rouge">include</code></h5>

<p>用法：<code class="language-plaintext highlighter-rouge">{\% include xxx %}</code></p>

<p>效果：会把<code class="language-plaintext highlighter-rouge">_includes/xxx</code>的内容插入进来</p>

<h5 id="relative_include"><code class="language-plaintext highlighter-rouge">relative_include</code></h5>

<p>用法：<code class="language-plaintext highlighter-rouge">{\% relative_include xxx %}</code></p>

<p>效果：会把<code class="language-plaintext highlighter-rouge">./xxx</code>的内容插入进来</p>

<h5 id="if"><code class="language-plaintext highlighter-rouge">if</code></h5>

<p>用法：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{\% if xxx %}
xxx
{\% else %}
xxx
{\% endif %}
</code></pre></div></div>

<p>效果：学过任何一个编程语言的人都知道，特别是c++的宏</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#if ! defined(xxx)
#define assert(...) xxx
#else
#define assert(...) (void)0
#endif
</span></code></pre></div></div>

<h5 id="unless"><code class="language-plaintext highlighter-rouge">unless</code></h5>

<p>用法：</p>

<pre><code class="language-htaccess">{\% unless xxx %}
xxx
{\% endunless %}
</code></pre>

<p>效果：恰好与<code class="language-plaintext highlighter-rouge">if</code>相反</p>

<h5 id="for"><code class="language-plaintext highlighter-rouge">for</code></h5>

<p>用法：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{\% for xxx in xxx %}
xxx
{\% endfor %}
</code></pre></div></div>
<p>效果：学过任何一个编程语言的人都知道</p>

<h5 id="case"><code class="language-plaintext highlighter-rouge">case</code></h5>

<p>用法：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{\% case xxx %}
{\% when xxx %}
xxx
{\% when xxx %}
xxx
...
{\% else %}
xxx
{\% endcase %}
</code></pre></div></div>

<h5 id="raw"><code class="language-plaintext highlighter-rouge">raw</code></h5>

<p>用法</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{\% raw %}
xxx
{\% endraw %}
</code></pre></div></div>

<p>效果：忽略里面的所有Jekyll语言的内容</p>

<h4 id="-xxx-获取值"><code class="language-plaintext highlighter-rouge">{\{ xxx }}</code>获取值</h4>

<p>上一个<code class="language-plaintext highlighter-rouge">{\% xxx %}</code>的表达</p>

<p>式也如下</p>

<h5 id="sitexxx"><code class="language-plaintext highlighter-rouge">site.xxx</code></h5>

<p>获取<code class="language-plaintext highlighter-rouge">_config.yml</code>文件的<code class="language-plaintext highlighter-rouge">xxx</code>属性</p>

<h5 id="pagexxx"><code class="language-plaintext highlighter-rouge">page.xxx</code></h5>

<p>获取yml头的<code class="language-plaintext highlighter-rouge">xxx</code>属性</p>

<h5 id="运算">运算</h5>

<p>几乎与其它语言相通，不赘述</p>

<h4 id="筛选器">筛选器</h4>

<p>用法：</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{\{ xxx | xxx }}
</code></pre></div></div>

<p>效果：按照后面一个对前面一个进行操作</p>

<h4 id="参见liquid-filters--jekyll-教程liquid-模板语言中文文档--liquid-中文网看这快速理解liquid基础篇_liquid语言-csdn博客">参见：<a href="https://jekylldo.cn/docs/liquid/filters/">Liquid Filters | Jekyll 教程</a>；<a href="https://liquid.bootcss.com/">Liquid 模板语言中文文档 | Liquid 中文网</a>；<a href="https://blog.csdn.net/MCM0115/article/details/136793334">看这！快速理解Liquid！基础篇_liquid语言-CSDN博客</a></h4>

<h4 id="_configyml"><code class="language-plaintext highlighter-rouge">_config.yml</code></h4>

<p>配置信息，可以与<code class="language-plaintext highlighter-rouge">{\{ xxx }}</code>共用，也可以指定Jekyll的动作，类似这样：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">localhost:4000"</span>
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[第一步，注册Github]]></summary></entry><entry><title type="html">关于</title><link href="http://localhost:4000/about/" rel="alternate" type="text/html" title="关于" /><published>2025-07-24T00:00:00+08:00</published><updated>2025-07-24T00:00:00+08:00</updated><id>http://localhost:4000/about</id><content type="html" xml:base="http://localhost:4000/about/"><![CDATA[<h2 id="欢迎来到leo的网站">欢迎来到Leo的网站！</h2>

<h2 id="这里是关于页">这里是关于页</h2>

<h3 id="代码博客遵循以下协议">代码、博客遵循以下协议</h3>

<p><img src="https://gitee.com/Leo-hele/leo-hele.github.io-images/raw/main/license.png" alt="license.png (2807×169)" /></p>

<p><a href="../license">版权申明</a></p>

<h3 id="作者信息">作者信息</h3>

<h4 id="网站">网站</h4>

<ul>
  <li>
    <p><a href="https://github.com/Leo-hele">github</a></p>
  </li>
  <li>
    <p><a href="https://gitee.com/Leo-hele">gitee</a></p>
  </li>
  <li>
    <p><a href="https://www.luogu.com.cn/user/1068806">洛谷</a></p>
  </li>
</ul>

<h4 id="建议">建议</h4>

<ul>
  <li>
    <p><a href="mailto:3682986542@qq.com">QQ</a></p>
  </li>
  <li>
    <p><a href="mailto:Leo-hele@outlook.com">outlook</a></p>
  </li>
</ul>]]></content><author><name>Leo</name></author><summary type="html"><![CDATA[欢迎来到Leo的网站！]]></summary></entry></feed>